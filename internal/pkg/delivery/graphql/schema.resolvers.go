package graphql

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.47

import (
	"context"
	"fmt"

	"github.com/gvidow/go-post-service/internal/api/graph"
	"github.com/gvidow/go-post-service/internal/entity"
)

// PublishPost is the resolver for the publishPost field.
func (r *mutationResolver) PublishPost(ctx context.Context, author string, title string, content string, allowComment bool) (*entity.Post, error) {
	panic(fmt.Errorf("not implemented: PublishPost - publishPost"))
}

// AddCommentToPost is the resolver for the addCommentToPost field.
func (r *mutationResolver) AddCommentToPost(ctx context.Context, author string, postID int, content string) (*entity.Comment, error) {
	panic(fmt.Errorf("not implemented: AddCommentToPost - addCommentToPost"))
}

// AddCommentToComment is the resolver for the addCommentToComment field.
func (r *mutationResolver) AddCommentToComment(ctx context.Context, author string, commentID int, content string) (*entity.Comment, error) {
	panic(fmt.Errorf("not implemented: AddCommentToComment - addCommentToComment"))
}

// ProhibitWritingComments is the resolver for the prohibitWritingComments field.
func (r *mutationResolver) ProhibitWritingComments(ctx context.Context, author string, postID int) (bool, error) {
	panic(fmt.Errorf("not implemented: ProhibitWritingComments - prohibitWritingComments"))
}

// AllowWritingComments is the resolver for the allowWritingComments field.
func (r *mutationResolver) AllowWritingComments(ctx context.Context, author string, postID int) (bool, error) {
	panic(fmt.Errorf("not implemented: AllowWritingComments - allowWritingComments"))
}

// Posts is the resolver for the posts field.
func (r *queryResolver) Posts(ctx context.Context) (*entity.Post, error) {
	panic(fmt.Errorf("not implemented: Posts - posts"))
}

// GetPost is the resolver for the getPost field.
func (r *queryResolver) GetPost(ctx context.Context, postID int) (*entity.Post, error) {
	panic(fmt.Errorf("not implemented: GetPost - getPost"))
}

// SubscribeOnPost is the resolver for the subscribeOnPost field.
func (r *subscriptionResolver) SubscribeOnPost(ctx context.Context, postID int) (<-chan *entity.Comment, error) {
	panic(fmt.Errorf("not implemented: SubscribeOnPost - subscribeOnPost"))
}

// Mutation returns graph.MutationResolver implementation.
func (r *Resolver) Mutation() graph.MutationResolver { return &mutationResolver{r} }

// Query returns graph.QueryResolver implementation.
func (r *Resolver) Query() graph.QueryResolver { return &queryResolver{r} }

// Subscription returns graph.SubscriptionResolver implementation.
func (r *Resolver) Subscription() graph.SubscriptionResolver { return &subscriptionResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
type subscriptionResolver struct{ *Resolver }

// !!! WARNING !!!
// The code below was going to be deleted when updating resolvers. It has been copied here so you have
// one last chance to move it out of harms way if you want. There are two reasons this happens:
//   - When renaming or deleting a resolver the old code will be put in here. You can safely delete
//     it when you're done.
//   - You have helper methods in this file. Move them out to keep these resolver files clean.
func (r *queryResolver) Find(ctx context.Context) (*entity.Post, error) {
	panic(fmt.Errorf("not implemented: Find - find"))
}
