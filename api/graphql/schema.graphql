type Post {
    id: Int!
    author: ID!
    title: String!
    content: String!
    allowComment: Boolean!
    created_at: Int! # unix time
    comments(limit: Int!, after: Int!): FeedComment!
}

type Comment {
    id: Int!
    author: ID!
    content: String!
    created_at: Int! # unix time
    replies(limit: Int!, after: Int!): FeedComment!
}

type FeedPost {
    posts: [Post!]!
    cursor: Int!
}

type FeedComment {
    comments: [Comment!]!
    cursor: Int!
}

type Query {
    posts(limit: Int! = 50, cursor: Int! = 0): FeedPost!
    getPost(postId: Int!): Post!
    replies(commentId: Int!, limit: Int! = 50, cursor: Int! = 0): FeedComment!
    comments(postId: Int!, limit: Int! = 50, cursor: Int! = 0): FeedComment!
}

type Mutation {
    publishPost(author: ID!, title: String!, content: String!, allowComment: Boolean! = true): Post!
    addCommentToPost(author: ID!, postId: Int!, content: String!): Comment!
    addCommentToComment(author: ID!, commentId: Int!, content: String!): Comment!
    prohibitWritingComments(author: ID!, postId: Int!): Boolean!
    allowWritingComments(author: ID!, postId: Int!): Boolean!
}

type Subscription {
    subscribeOnPost(postId: Int!): Comment!
}
